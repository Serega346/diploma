import {
  FETCH_CLOTHES_START,
  FETCH_CLOTHES_SUCCESS,
  FETCH_CLOTHES_FAILURE,
  LOAD_MORE_CLOTHES_FAILURE,
  LOAD_MORE_CLOTHES_START,
  LOAD_MORE_CLOTHES_SUCCESS,
  FETCH_CLOTHES_BY_ID_FAILURE,
  FETCH_CLOTHES_BY_ID_START,
  FETCH_CLOTHES_BY_ID_SUCCESS,
  ADD_ITEM_TO_BASKET,
  SEARCH_ITEM,
  FETCH_CATEGORIES_FAILURE,
  FETCH_CATEGORIES_START,
  FETCH_CATEGORIES_SUCCESS,
  REMOVE_ITEM_FROM_BASKET,
  CLEAN_BASKET
} from 'actionTypes'
import {
  fetchClothes as fetchClothesApi,
  loadMoreClothes as loadMoreClothesApi,
  fetchItemById as fetchItemByIdApi,
  fetchCategories as fetchCategoriesApi
} from 'api'
import {getRenderedClothesLength} from 'selectors'

export const fetchClothes = () => async dispatch => {
  dispatch({type: FETCH_CLOTHES_START})

  try {
    const clothes = await fetchClothesApi()
    dispatch({
      type: FETCH_CLOTHES_SUCCESS,
      payload: clothes
    })
  } catch (err) {
    dispatch({
      type: FETCH_CLOTHES_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const loadMoreClothes = () => async (dispatch, getState) => {
  const offset = getRenderedClothesLength(getState())
  dispatch({type: LOAD_MORE_CLOTHES_START})

  try {
    const clothes = await loadMoreClothesApi({offset})
    dispatch({
      type: LOAD_MORE_CLOTHES_SUCCESS,
      payload: clothes
    })
  } catch (err) {
    dispatch({
      type: LOAD_MORE_CLOTHES_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const fetchItemById = (id) => async dispatch => {
  dispatch({type: FETCH_CLOTHES_BY_ID_START})

  try {
    const item = await fetchItemByIdApi(id)
    dispatch({
      type: FETCH_CLOTHES_BY_ID_SUCCESS,
      payload: item
    })
  } catch (err) {
    dispatch({
      type: FETCH_CLOTHES_BY_ID_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const addItemToBasket = id => dispatch => {
  dispatch({
    type: ADD_ITEM_TO_BASKET,
    payload: id
  })
}

export const searchItem = text => dispatch => {
  dispatch({
    type: SEARCH_ITEM,
    payload: text
  })
}

export const fetchCategories = () => async dispatch => {
  dispatch({type: FETCH_CATEGORIES_START})

  try {
    const categories = await fetchCategoriesApi()
    dispatch({
      type: FETCH_CATEGORIES_SUCCESS,
      payload: categories
    })
  } catch (err) {
    dispatch({
      type: FETCH_CATEGORIES_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const removeItemFromBasket = id => async dispatch => {
  dispatch({
    type: REMOVE_ITEM_FROM_BASKET,
    payload: id
  })
}

export const cleanBasket = () => async dispatch => {
  dispatch({
    type: CLEAN_BASKET
  })
}

export const basketCheckout = clothes => () => {
  alert(JSON.stringify(clothes))
}

